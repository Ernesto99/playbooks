---
- name: repository cache
  hosts: repository-cache
  sudo: True
  gather_facts: True
  tags:
    - repository-cache
  tasks:

    - name: ensure required packages are installed
      apt:
        pkg: "{{ item }}"
        state: latest
        update_cache: yes
        cache_valid_time: 600
      with_items:
        - nginx
        - xfsprogs

    - name: create filesystems on data device
      filesystem:
        dev: "{{ cache_device }}"
        fstype: xfs
        opts: -i size=1024

    - name: create mount point for cache
      file:
        state: directory
        path: "{{ proxy_cache_path }}"
        owner: www-data
        group: www-data
        mode: 0755

    - name: mount device directories
      mount: 
        name: "{{ proxy_cache_path }}"
        src: "{{ cache_device }}"
        fstype: xfs 
        opts: noatime,nodiratime,nobarrier,logbufs=8
        state: mounted

    - name: create icon directory for nginx
      file:
        state: directory
        path: "{{ icon_directory }}"
        owner: root
        group: root
        mode: 0755

    - name: copy icon files
      copy:
        mode: 0644
        src: "files/{{ inventory_hostname }}/icons/"
        dest: "{{ icon_directory }}"

    - name: copy nginx configuration
      template:
        src: templates/etc/nginx/sites-available/repository-cache.conf
        dest: /etc/nginx/sites-available/repository-cache.conf
        owner: root
        group: root
        mode: 0644

    - name: link nginx site configuration to enabled sites
      file:
        src: /etc/nginx/sites-available/repository-cache.conf
        dest: /etc/nginx/sites-enabled/repository-cache.conf
        state: link

    - name: ensure default configs are deleted
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/nginx/sites-enabled/default
        - /etc/nginx/sites-available/default

    - name: ensure nginx is restarted
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - nginx

    - name: create directory for mirror sync files
      file:
        state: directory
        path: "{{ mirror_sync_root_dir }}"
        owner: root
        group: root
        mode: 0755

    - name: install mirror sync script
      template:
        src: templates/mirror_sync/sync.sh
        dest: "{{ mirror_sync_root_dir }}/sync.sh"
        owner: root
        group: root
        mode: 0755

    - name: install mirror sync exclude filters
      template:
        src: "templates/mirror_sync/{{ item.name }}_excludes"
        dest: "{{ mirror_sync_root_dir }}/{{ item.name }}_excludes"
        owner: root
        group: root
        mode: 0644
      with_items: mirrors

    - name: install mirror sync configs
      template:
        src: templates/mirror_sync/sync-conf-template.conf
        dest: "{{ mirror_sync_root_dir }}/{{ item.name }}.conf"
        owner: root
        group: root
        mode: 0644
      with_items: mirrors

    - name: setup mirror sync cronjob
      cron:
        name: "{{ item.name }}"
        job: "{{ mirror_sync_root_dir }}/sync.sh {{ mirror_sync_root_dir }}/{{ item.name }}.conf"
        hour: "{{ item.sync_hour }}"
        cron_file: "{{ item.name }}"
        user: root
        minute: 0
        state: present
      with_items: mirrors
